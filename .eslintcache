[{"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/App.tsx":"1","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/index.tsx":"2","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/reportWebVitals.ts":"3","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/draw.tsx":"4","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawCanvas.tsx":"5","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawStrokeActions.tsx":"6","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawGeneralActions.tsx":"7","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/authentication.tsx":"8","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/login.tsx":"9","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/signUp.tsx":"10","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/authenticationService.ts":"11","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/apiService.ts":"12","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/userService.ts":"13","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/drawingList/drawingList.tsx":"14","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/protectedRoute.tsx":"15","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawContainer.tsx":"16"},{"size":1295,"mtime":1609376372387,"results":"17","hashOfConfig":"18"},{"size":516,"mtime":1608955821423,"results":"19","hashOfConfig":"18"},{"size":425,"mtime":1608952139290,"results":"20","hashOfConfig":"18"},{"size":4692,"mtime":1609381583390,"results":"21","hashOfConfig":"18"},{"size":4480,"mtime":1609381559568,"results":"22","hashOfConfig":"18"},{"size":2066,"mtime":1609219260991,"results":"23","hashOfConfig":"18"},{"size":2061,"mtime":1609206012053,"results":"24","hashOfConfig":"18"},{"size":2588,"mtime":1609372090523,"results":"25","hashOfConfig":"18"},{"size":2287,"mtime":1609205485572,"results":"26","hashOfConfig":"18"},{"size":2621,"mtime":1609218871167,"results":"27","hashOfConfig":"18"},{"size":2479,"mtime":1609218875310,"results":"28","hashOfConfig":"18"},{"size":1242,"mtime":1609209993294,"results":"29","hashOfConfig":"18"},{"size":2471,"mtime":1609382426996,"results":"30","hashOfConfig":"18"},{"size":3835,"mtime":1609382416547,"results":"31","hashOfConfig":"18"},{"size":1123,"mtime":1609211131813,"results":"32","hashOfConfig":"18"},{"size":924,"mtime":1609378844413,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"g34kcw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/App.tsx",[],["69","70"],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/index.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/reportWebVitals.ts",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/draw.tsx",["71","72"],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawCanvas.tsx",["73","74"],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawStrokeActions.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawGeneralActions.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/authentication.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/login.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/authentication/signUp.tsx",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/authenticationService.ts",[],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/apiService.ts",["75"],"import axios, { Method, AxiosResponse } from 'axios';\nimport AuthenticationService from './authenticationService';\n\nexport interface APIRequestConfig {\n\n    endpoint: string,\n    method: Method,\n    data?: { [key: string]: any }\n};\n\nexport default class ApiService {\n\n    private static bearerToken: string;\n\n    public static setBearerToken(token: string) {\n        ApiService.bearerToken = token;\n    };\n\n    public static async performRequest<T>(config: APIRequestConfig): Promise<AxiosResponse<any>> {\n\n        let response: AxiosResponse;\n\n        // The fully formed API url and headers\n        const url = `/api/${config.endpoint}`;\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${AuthenticationService.getToken()}`\n        }\n\n        try {\n            response = await axios({\n                url,\n                headers,\n                method: config.method,\n                data: config.data\n            });\n        }\n\n        catch (error) {\n            response = error.response;\n            \n            if (response.status === 403) {\n                AuthenticationService.persistLoginState(false, '');\n            }\n        }\n\n        return response;\n    };\n};","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/services/userService.ts",["76"],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/drawingList/drawingList.tsx",["77","78"],"/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/protectedRoute.tsx",["79","80"],"import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthenticationService from '../services/authenticationService';\n\nexport const ProtectedRoute = (props: any) => {\n\n    const [shouldRedirect, setShouldRedirect] = useState<boolean | null>(null);\n\n    /** Determines if the user has access to the route by way of being logged in */\n    useEffect(() => {\n        if (AuthenticationService.isLoggedIn() == false) {\n            setShouldRedirect(true);\n        }\n\n        else {\n            setShouldRedirect(false);\n        }\n    }, []);\n\n    /** When we know we should redirect for sure, go back to root */\n    if (shouldRedirect) {\n        return (\n            <Redirect to=\"/\" />\n        )\n    }\n\n    /** Otherwise, we're authenticated, so explicitly no redirect */\n    else if (shouldRedirect == false) {\n        return (\n            <>\n                {props.children}\n            </>\n        );\n    }\n\n    /** Should redirect is not yet known, show essentially nothing */\n    else {\n        return (\n            <></>\n        )\n    }\n};\n\nexport default ProtectedRoute;","/c/Users/Christopher D Jativa/Documents/Projects/drawly/src/components/draw/drawContainer.tsx",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":46,"nodeType":"89","messageId":"90","endLine":1,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":78,"column":8,"nodeType":"93","endLine":78,"endColumn":55,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":42,"column":25,"nodeType":"97","messageId":"98","endLine":42,"endColumn":34,"fix":"99"},{"ruleId":"91","severity":1,"message":"100","line":48,"column":8,"nodeType":"93","endLine":48,"endColumn":26,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"102","line":19,"column":40,"nodeType":"89","messageId":"90","endLine":19,"endColumn":41},{"ruleId":"87","severity":1,"message":"103","line":70,"column":15,"nodeType":"89","messageId":"90","endLine":70,"endColumn":23},{"ruleId":"104","severity":1,"message":"105","line":78,"column":41,"nodeType":"106","endLine":78,"endColumn":94},{"ruleId":"107","severity":1,"message":"108","line":86,"column":38,"nodeType":"109","messageId":"110","endLine":86,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":11,"column":48,"nodeType":"109","messageId":"110","endLine":11,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":28,"column":29,"nodeType":"109","messageId":"110","endLine":28,"endColumn":31},{"ruleId":"87","severity":1,"message":"111","line":4,"column":21,"nodeType":"89","messageId":"90","endLine":4,"endColumn":31},{"ruleId":"91","severity":1,"message":"112","line":25,"column":8,"nodeType":"93","endLine":25,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'isPublic', and 'props.wasFetched'. Either include them or remove the dependency array.","ArrayExpression",["116"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"117","text":"118"},"React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array. You can also do a functional update 'setContext(c => ...)' if you only need 'context' in the 'setContext' call.",["119"],"'T' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},[1211,1211],"()",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [saveOccurred, drawingData, elapsedDrawingTime, isPublic, props.wasFetched, history]",{"range":"127","text":"128"},"Update the dependencies array to be: [context, props.storedData]",{"range":"129","text":"130"},"Update the dependencies array to be: [id]",{"range":"131","text":"132"},[2673,2720],"[saveOccurred, drawingData, elapsedDrawingTime, isPublic, props.wasFetched, history]",[1378,1396],"[context, props.storedData]",[698,700],"[id]"]